{"version":3,"sources":["queries.js","constants.js","components/Header.js","components/EventListIcons.js","components/EventList.js","components/Team.js","components/DraggableSelection.js","components/SaveAction.js","components/GameSection.js","components/InfoDrawer.js","components/Game.js","components/Home.js","components/AuthenticationMutation.js","components/Authentication.js","components/App.js","serviceWorker.js","index.js","api.js"],"names":["LOGIN_MUTATION","gql","_templateObject","SIGNUP_MUTATION","_templateObject2","EVENT_ENTRY_MUTATION","_templateObject3","ME_QUERY","_templateObject4","AUTH_TOKEN_FIELD","Header","_this","this","classes","props","react_default","a","createElement","className","root","AppBar_default","position","appBar","Toolbar_default","Typography_default","variant","color","grow","year","Button_default","onClick","localStorage","removeItem","history","push","React","Component","withStyles","theme","display","zIndex","drawer","flexGrow","menuButton","marginLeft","marginRight","EventListIcons","Fragment","enteredEvents","indexOf","event","id","CheckCircle_default","status","Lock_default","EventList","Drawer_default","paper","drawerPaper","toolbar","List_default","Object","keys","events","map","key","ListItem_default","ListItemAvatar_default","Avatar_default","number","ListItemText_default","primary","name","secondary","components_EventListIcons","ListItemSecondaryAction_default","IconButton_default","aria-label","switchEvent","ArrowForwardIos_default","width","flexShrink","mixins","styles","winnersAvatar","backgroundColor","Red","card","maxWidth","maxHeight","textAlign","align","media","height","Team","Card_default","CardMedia_default","image","team","cdnImage","title","CardContent_default","gutterBottom","component","index","DraggableSelection","react_beautiful_dnd_esm","onDragEnd","droppableId","provided","snapshot","assign","droppableProps","ref","innerRef","style","isDraggingOver","background","padding","teams","node","draggableId","draggableProps","dragHandleProps","draggableStyle","objectSpread","userSelect","grid","margin","concat","components_Team","placeholder","SaveAction","_confirm","data","entry","upsertPlayerEntry","eventId","saveEntry","_this2","_this$props","currentEvent","eventNumber","_teams$slice$map","slice","_teams$slice$map2","slicedToArray","team1","team2","team3","react_apollo_esm","mutation","variables","onCompleted","onError","error","setSaveError","disabled","saveActivated","button","size","Save_default","rightIcon","saveError","spacing","unit","verticalAlign","fontSize","red","GameSection","content","paddingLeft","components_SaveAction","components_DraggableSelection","InfoDrawer","anchor","profile","username","points","rank","marblelympics","playerCount","currentEventEntry","entryCount","minWidth","Game","state","eventEntries","teamsSorted","arrayToObject","array","specificKey","reduce","obj","item","sortTeamsFromEntries","selectedTeams","selections","selection","foundIndex","_ref","setState","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","destination","source","message","split","join","_data$me$user","me","user","email","_data$me$marblelympic","marblelympicsParticipated","edges","components_Header","components_EventList","components_GameSection","components_InfoDrawer","Home","getItem","query","loading","LinearProgress_default","components_Game","AuthenticationMutation","login","token","tokenAuth","setItem","location","reload","signup","createPlayer","player","setMessage","switchToLogin","password","type","fullWidth","submit","marginTop","Authentication","handleTabChange","value","_this$state","main","CssBaseline_default","Paper_default","marginBottom","Tabs_default","onChange","Tab_default","preventDefault","label","href","avatar","LockOutlined_default","FormControl_default","required","InputLabel_default","htmlFor","Input_default","autoComplete","autoFocus","e","target","components_AuthenticationMutation","defineProperty","breakpoints","up","flexDirection","alignItems","palette","form","App","Switch","Route","exact","path","Boolean","window","hostname","match","authLink","setContext","_","headers","authorization","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","BrowserRouter","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8c9bed4.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const LOGIN_MUTATION = gql`\n  mutation LoginMutation($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nexport const SIGNUP_MUTATION = gql`\n  mutation SignupMutation($username: String!, $password: String!) {\n    createPlayer(input: { username: $username, password: $password }) {\n      player {\n        id\n        createdAt\n        user {\n          id\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const EVENT_ENTRY_MUTATION = gql`\n  mutation EventEntryMutation(\n    $eventNumber: Int!\n    $team1: String!\n    $team2: String!\n    $team3: String!\n  ) {\n    upsertPlayerEntry(\n      input: {\n        eventNumber: $eventNumber\n        team1: $team1\n        team2: $team2\n        team3: $team3\n      }\n    ) {\n      entry {\n        id\n        player {\n          id\n        }\n        event {\n          id\n          ml {\n            year\n          }\n          number\n          name\n        }\n        points\n        rank\n        selections {\n          position\n          team {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const ME_QUERY = gql`\n  query {\n    me {\n      id\n      user {\n        id\n        username\n      }\n      createdAt\n      marblelympicsParticipated(marblelympics_Active: true) {\n        edges {\n          node {\n            id\n            points\n            rank\n            marblelympics {\n              id\n              year\n              playerCount\n              host {\n                id\n                name\n              }\n              teams {\n                edges {\n                  node {\n                    id\n                    name\n                    cdnImage\n                  }\n                }\n              }\n              events {\n                edges {\n                  node {\n                    id\n                    ml {\n                      year\n                    }\n                    number\n                    name\n                    entryCount\n                    status\n                  }\n                }\n              }\n            }\n            eventEntries {\n              edges {\n                node {\n                  id\n                  player {\n                    id\n                  }\n                  event {\n                    id\n                    ml {\n                      year\n                    }\n                    number\n                    name\n                  }\n                  points\n                  rank\n                  selections {\n                    position\n                    team {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","const BASE_PREFIX = process.env.NODE_ENV === \"development\" ? \"DEV_\" : \"\";\n\nexport const AUTH_TOKEN_FIELD = BASE_PREFIX + \"FML_AUTH_TOKEN\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { AUTH_TOKEN_FIELD } from \"../constants\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n});\n\nclass Header extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    const logout = () => {\n      localStorage.removeItem(AUTH_TOKEN_FIELD);\n      this.props.history.push(\"/login\");\n    };\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              FML {this.props.year}\n            </Typography>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                logout();\n              }}\n            >\n              Logout\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport CheckCirle from \"@material-ui/icons/CheckCircle\";\nimport Lock from \"@material-ui/icons/Lock\";\n\nclass EventListIcons extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.enteredEvents.indexOf(this.props.event.id) !== -1 ? (\n          <CheckCirle />\n        ) : (\n          \"\"\n        )}\n        {this.props.event.status === 4 ? <Lock /> : \"\"}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventListIcons;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\nimport EventListIcons from \"./EventListIcons\";\n\nconst drawerWidth = 320;\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass EventList extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          {Object.keys(this.props.events).map(key => (\n            <ListItem key={key}>\n              <ListItemAvatar>\n                <Avatar>{this.props.events[key].number}</Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={this.props.events[key].name}\n                secondary={\n                  <EventListIcons\n                    event={this.props.events[key]}\n                    enteredEvents={this.props.enteredEvents}\n                  />\n                }\n              />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  aria-label=\"go-to-event\"\n                  onClick={() => this.props.switchEvent(key)}\n                >\n                  <ArrowForwardIos />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nEventList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EventList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Red from \"@material-ui/core/colors/red\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = {\n  winnersAvatar: {\n    color: \"#fff\",\n    backgroundColor: Red[500]\n  },\n  card: {\n    maxWidth: 400,\n    maxHeight: 250,\n    textAlign: \"center\",\n    align: \"center\"\n  },\n  media: {\n    height: 150\n  }\n};\n\nclass Team extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.media}\n          image={this.props.team.cdnImage}\n          title={this.props.team.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {this.props.index < 3 ? (\n              <Avatar className={classes.winnersAvatar}>\n                {this.props.index + 1}\n              </Avatar>\n            ) : (\n              <Avatar />\n            )}\n            {this.props.team.name}\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nTeam.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Team);\n","import React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Team from \"./Team\";\n\nconst grid = 8;\n\nconst getItemStyle = draggableStyle => ({\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  background: \"white\",\n\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 400\n});\n\nclass DraggableSelection extends React.Component {\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.props.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {this.props.teams.map((team, index) => (\n                <Draggable\n                  key={team.node.id}\n                  draggableId={team.node.id}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={getItemStyle(provided.draggableProps.style)}\n                    >\n                      <Team index={index} team={team.node} />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nexport default DraggableSelection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { red } from \"@material-ui/core/colors\";\nimport { Mutation } from \"react-apollo\";\nimport { EVENT_ENTRY_MUTATION } from \"../queries\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n    verticalAlign: \"center\",\n    fontSize: 25\n  },\n  error: {\n    color: red[500]\n  }\n});\n\nclass SaveAction extends React.Component {\n  _confirm = data => {\n    const entry = data.upsertPlayerEntry.entry;\n    const eventId = entry.event.id;\n    this.props.saveEntry(eventId, entry);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { teams, currentEvent } = this.props;\n    const eventNumber = currentEvent.number;\n    const [team1, team2, team3] = teams.slice(0, 3).map(team => team.node.name);\n\n    return (\n      <Mutation\n        mutation={EVENT_ENTRY_MUTATION}\n        variables={{ eventNumber, team1, team2, team3 }}\n        onCompleted={data => this._confirm(data)}\n        onError={error => this.props.setSaveError(error)}\n      >\n        {mutation => (\n          <React.Fragment>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={currentEvent.status === 4 || !this.props.saveActivated}\n              className={classes.button}\n              size=\"large\"\n              onClick={mutation}\n            >\n              Save\n              <SaveIcon className={classes.rightIcon} />\n            </Button>\n            <Typography component=\"h4\" variant=\"h6\" className={classes.error}>\n              {this.props.saveError || \"\"}\n            </Typography>\n          </React.Fragment>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nSaveAction.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SaveAction);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport DraggableSelection from \"./DraggableSelection\";\nimport SaveAction from \"./SaveAction\";\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  },\n  title: {\n    margin: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 2}px`\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass GameSection extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.content}>\n        <Typography variant=\"h5\" className={classes.title}>\n          {this.props.currentEvent\n            ? `Event #${this.props.currentEvent.number} - ${\n                this.props.currentEvent.name\n              }`\n            : \"\"}\n          {this.props.currentEvent && this.props.currentEvent.status === 4 ? (\n            <Lock\n              style={{ fontSize: 20, verticalAlign: \"center\", paddingLeft: 5 }}\n            />\n          ) : (\n            \"\"\n          )}\n        </Typography>\n        <SaveAction\n          saveActivated={this.props.saveActivated}\n          teams={this.props.teams}\n          currentEvent={this.props.currentEvent}\n          saveEntry={this.props.saveEntry}\n          saveError={this.props.saveError}\n          setSaveError={this.props.setSaveError}\n        />\n        <DraggableSelection\n          teams={this.props.teams}\n          onDragEnd={this.props.onDragEnd}\n        />\n      </main>\n    );\n  }\n}\n\nGameSection.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(GameSection);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst drawerWidth = 320;\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar,\n  card: {\n    minWidth: 275\n  },\n  title: {\n    fontSize: 14\n  }\n});\n\nclass InfoDrawer extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.toolbar} />\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h4\" component=\"h2\" align=\"center\">\n              {this.props.profile.username}\n            </Typography>\n          </CardContent>\n        </Card>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography>\n              <strong>Overall points: </strong>\n              {this.props.profile.points}\n            </Typography>\n            <Typography>\n              <strong>Overall rank: </strong>\n              {this.props.profile.rank !== -1\n                ? this.props.profile.rank\n                : this.props.marblelympics.playerCount}\n            </Typography>\n            <Typography>\n              <strong>Total players: </strong>\n              {this.props.marblelympics.playerCount}\n            </Typography>\n          </CardContent>\n        </Card>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h5\" align=\"center\">\n              EVENT DETAILS\n            </Typography>\n            <Typography variant=\"h6\" component=\"h6\" align=\"center\">\n              {`#${this.props.currentEvent.number}`}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h6\" align=\"center\">\n              {`${this.props.currentEvent.name}`}\n            </Typography>\n            <Typography>\n              <strong>Event points: </strong>\n              {this.props.currentEventEntry\n                ? this.props.currentEventEntry.points\n                : \"0\"}\n            </Typography>\n            <Typography>\n              <strong>Event rank: </strong>\n              {this.props.currentEventEntry &&\n              this.props.currentEventEntry.rank !== -1\n                ? this.props.currentEventEntry.rank\n                : this.props.currentEvent.entryCount}\n            </Typography>\n            <Typography>\n              <strong>Total entries for event: </strong>\n              {this.props.currentEvent.entryCount}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Drawer>\n    );\n  }\n}\n\nInfoDrawer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(InfoDrawer);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport EventList from \"./EventList\";\nimport GameSection from \"./GameSection\";\nimport InfoDrawer from \"./InfoDrawer\";\n\nconst styles = () => ({\n  root: {\n    display: \"flex\"\n  }\n});\n\nclass Game extends Component {\n  state = {\n    profile: {},\n    marblelympics: {},\n    teams: [],\n    events: {},\n    currentEvent: {},\n    eventEntries: {},\n    saveActivated: false,\n    saveError: \"\"\n  };\n\n  teamsSorted = false;\n\n  arrayToObject = (array, specificKey) =>\n    array.reduce((obj, item) => {\n      const keyname = specificKey ? item.node[specificKey].id : item.node.id;\n      obj[keyname] = item.node;\n      return obj;\n    }, {});\n\n  componentDidMount() {\n    const data = this.props.data;\n    const { id, email, username } = data.me.user;\n    const { points, rank } = data.me.marblelympicsParticipated.edges[0].node;\n    const profile = { id, email, username, points, rank };\n    const marblelympics =\n      data.me.marblelympicsParticipated.edges[0].node.marblelympics;\n    const teams = marblelympics.teams.edges;\n    const events = this.arrayToObject(marblelympics.events.edges);\n    delete marblelympics[\"teams\"];\n    delete marblelympics[\"events\"];\n    const currentEvent = events[Object.keys(events)[0]];\n    const eventEntries = this.arrayToObject(\n      data.me.marblelympicsParticipated.edges[0].node.eventEntries.edges,\n      \"event\"\n    );\n    this.setState({\n      profile,\n      marblelympics,\n      teams,\n      events,\n      currentEvent,\n      eventEntries\n    });\n  }\n\n  componentDidUpdate() {\n    this.sortTeamsFromEntries();\n  }\n\n  sortTeamsFromEntries = () => {\n    const entry = this.state.eventEntries[this.state.currentEvent.id];\n    if (!this.teamsSorted && entry) {\n      const selectedTeams = entry.selections.map(\n        selection => selection.team.id\n      );\n      let teams = this.state.teams;\n      teams.map((team, index) => {\n        const foundIndex = selectedTeams.indexOf(team.node.id);\n        if (foundIndex !== -1) {\n          [teams[index], teams[foundIndex]] = [teams[foundIndex], teams[index]];\n        }\n        return teams[index];\n      });\n      this.setState({ teams });\n      this.teamsSorted = true;\n    }\n  };\n\n  switchEvent = key => {\n    const currentEvent = this.state.events[key];\n    this.teamsSorted = false;\n    this.setState({ currentEvent, saveActivated: false, saveError: \"\" });\n  };\n\n  reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const teams = this.reorder(\n      this.state.teams,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      teams,\n      saveActivated: true\n    });\n  };\n\n  saveEntry = (eventId, entry) => {\n    const eventEntries = { ...this.state.eventEntries };\n    eventEntries[eventId] = entry;\n    this.setState({\n      eventEntries,\n      saveActivated: false,\n      saveError: \"\"\n    });\n  };\n\n  setSaveError = error => {\n    const saveError = error.message\n      .split(\": \")\n      .slice(1)\n      .join(\"\");\n    this.setState({ saveError });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Header\n          history={this.props.history}\n          year={this.state.marblelympics.year}\n        />\n        <div className={classes.root}>\n          <EventList\n            events={this.state.events}\n            enteredEvents={Object.keys(this.state.eventEntries)}\n            switchEvent={this.switchEvent}\n          />\n          <GameSection\n            currentEvent={this.state.currentEvent}\n            teams={this.state.teams}\n            onDragEnd={this.onDragEnd}\n            saveActivated={this.state.saveActivated}\n            saveEntry={this.saveEntry}\n            saveError={this.state.saveError}\n            setSaveError={this.setSaveError}\n          />\n          <InfoDrawer\n            profile={this.state.profile}\n            marblelympics={this.state.marblelympics}\n            currentEvent={this.state.currentEvent}\n            currentEventEntry={\n              this.state.eventEntries[this.state.currentEvent.id]\n            }\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nGame.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Game);\n","import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { ME_QUERY } from \"../queries\";\nimport Game from \"./Game\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { AUTH_TOKEN_FIELD } from \"../constants\";\n\nclass Home extends Component {\n  componentDidMount() {\n    const auth_token = localStorage.getItem(AUTH_TOKEN_FIELD);\n    if (!auth_token) {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Query query={ME_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <LinearProgress style={{ height: 10 }} />;\n            if (error) return <div>{this.props.history.push(\"/login\")}</div>;\n            return <Game history={this.props.history} data={data} />;\n          }}\n        </Query>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Mutation } from \"react-apollo\";\nimport { LOGIN_MUTATION, SIGNUP_MUTATION } from \"../queries\";\nimport { AUTH_TOKEN_FIELD } from \"../constants\";\n\nconst styles = theme => ({\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  }\n});\n\nclass AuthenticationMutation extends React.Component {\n  login = data => {\n    const token = data.tokenAuth.token;\n    localStorage.setItem(AUTH_TOKEN_FIELD, token);\n    // eslint-disable-next-line no-restricted-globals\n    location.reload(true);\n  };\n\n  signup = data => {\n    const username = data.createPlayer.player.user.username;\n    this.props.setMessage(`User ${username} created`);\n    this.props.switchToLogin();\n  };\n\n  _confirm = data => {\n    this.props.login === 0 ? this.login(data) : this.signup(data);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { username, password } = this.props;\n\n    return (\n      <Mutation\n        mutation={this.props.login === 0 ? LOGIN_MUTATION : SIGNUP_MUTATION}\n        variables={{ username, password }}\n        onCompleted={data => this._confirm(data)}\n        onError={() => this.props.onError()}\n      >\n        {mutation => (\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={mutation}\n          >\n            {this.props.login === 0 ? \"Log in\" : \"Sign up\"}\n          </Button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nAuthenticationMutation.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AuthenticationMutation);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { AUTH_TOKEN_FIELD } from \"../constants\";\nimport { red } from \"@material-ui/core/colors\";\nimport AuthenticationMutation from \"./AuthenticationMutation\";\n\nconst styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  error: {\n    color: red[500]\n  }\n});\n\nclass Authentication extends React.Component {\n  state = {\n    login: 0,\n    username: \"\",\n    password: \"\",\n    message: \"\",\n    error: false\n  };\n\n  componentDidMount() {\n    const auth_token = localStorage.getItem(AUTH_TOKEN_FIELD);\n    if (auth_token) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  handleTabChange = (event, value) => {\n    this.setState({ login: value, username: \"\", password: \"\", error: false });\n  };\n\n  setMessage = message => {\n    this.setState({ message });\n  };\n\n  switchToLogin = () => {\n    this.handleTabChange(0, 0);\n  };\n\n  onError = () => {\n    this.setState({ error: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { login, username, password, message, error } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <AppBar position=\"static\" style={{ marginBottom: 20 }}>\n            <Tabs\n              variant=\"fullWidth\"\n              value={login}\n              onChange={this.handleTabChange}\n            >\n              <Tab\n                component=\"a\"\n                onClick={event => event.preventDefault()}\n                label=\"Log In\"\n                href=\"login\"\n              />\n              <Tab\n                component=\"a\"\n                onClick={event => event.preventDefault()}\n                label=\"Sign Up\"\n                href=\"signup\"\n              />\n            </Tabs>\n          </AppBar>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {login === 0 ? \"Log in\" : \"Sign up\"}\n          </Typography>\n          <Typography component=\"h4\" variant=\"h6\" className={classes.error}>\n            {message || \"\"}\n          </Typography>\n          {error ? (\n            <Typography component=\"h4\" variant=\"h6\" className={classes.error}>\n              {login === 0 ? \"Invalid credentials\" : \"Username already in use\"}\n            </Typography>\n          ) : (\n            \"\"\n          )}\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Username</InputLabel>\n            <Input\n              id=\"username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={e => this.setState({ username: e.target.value })}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={e => this.setState({ password: e.target.value })}\n            />\n          </FormControl>\n          <AuthenticationMutation\n            username={username}\n            password={password}\n            login={login}\n            onError={this.onError}\n            switchToLogin={this.switchToLogin}\n            setMessage={this.setMessage}\n          />\n        </Paper>\n      </main>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Authentication);\n","import React, { Component } from \"react\";\nimport Home from \"./Home\";\nimport Authentication from \"./Authentication\";\nimport { Switch, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Authentication} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { setContext } from \"apollo-link-context\";\nimport { API_URL } from \"./api\";\nimport { AUTH_TOKEN_FIELD } from \"./constants\";\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN_FIELD);\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : \"\"\n    }\n  };\n});\n\nconst httpLink = createHttpLink({\n  uri: API_URL\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export let API_URL = \"\";\n\nif (process.env.NODE_ENV === \"development\") {\n  API_URL = \"http://localhost:8000/graphql/\";\n}\n"],"sourceRoot":""}